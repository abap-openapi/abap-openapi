CLASS zcl_aopi_main DEFINITION PUBLIC.
  PUBLIC SECTION.
    TYPES: BEGIN OF ty_result,
        clas TYPE string,
        intf TYPE string,
      END OF ty_result.

    METHODS run
      IMPORTING iv_json TYPE string
      RETURNING VALUE(rs_result) TYPE ty_result.

  PRIVATE SECTION.
    DATA mo_json TYPE REF TO zcl_oapi_json.

    TYPES: BEGIN OF ty_operation,
             path TYPE string,
             method TYPE string,
             summary TYPE string,
             description TYPE string,
             operation_id TYPE string,
           END OF ty_operation.

    TYPES ty_operations TYPE STANDARD TABLE OF ty_operation WITH DEFAULT KEY.

    METHODS operations RETURNING VALUE(rt_operations) TYPE ty_operations.

ENDCLASS.

CLASS zcl_aopi_main IMPLEMENTATION.

  METHOD run.

    DATA lv_interface_name TYPE string.
    DATA lt_operations TYPE ty_operations.
    DATA ls_operation LIKE LINE OF lt_operations.

    CREATE OBJECT mo_json EXPORTING iv_json = iv_json.

    ASSERT mo_json->value_string( '/openapi' ) CP '3*'.

    lt_operations = operations( ).

    lv_interface_name = 'zif_bar'.

    rs_result-clas =
      |CLASS zcl_bar DEFINITION PUBLIC.\n| &&
      |* Generated by abap-openapi-client\n| &&
      |* { mo_json->value_string( '/info/title' ) }\n| &&
      |  PUBLIC SECTION.\n| &&
      |    INTERFACES { lv_interface_name }.\n| &&
      |ENDCLASS.\n\n| &&
      |CLASS zcl_bar IMPLEMENTATION.\n|.

    LOOP AT lt_operations INTO ls_operation.
      rs_result-clas = rs_result-clas &&
        |  METHOD { lv_interface_name }~{ ls_operation-operation_id }.\n| &&
        |  ENDMETHOD.\n\n|.
    ENDLOOP.

    rs_result-clas = rs_result-clas && |ENDCLASS.|.

    rs_result-intf = |INTERFACE { lv_interface_name }.\n| &&
      |* Generated by abap-openapi-client\n| &&
      |* { mo_json->value_string( '/info/title' ) }\n\n|.
    LOOP AT lt_operations INTO ls_operation.
      rs_result-intf = rs_result-intf &&
        |* { to_upper( ls_operation-method ) } - { ls_operation-summary }\n| &&
        |  METHODS { ls_operation-operation_id }.\n|.
    ENDLOOP.
    rs_result-intf = rs_result-intf && |ENDINTERFACE.|.

  ENDMETHOD.

  METHOD operations.
    DATA lt_paths TYPE string_table.
    DATA lv_path LIKE LINE OF lt_paths.
    DATA lt_methods TYPE string_table.
    DATA lv_method LIKE LINE OF lt_methods.
    DATA ls_operation LIKE LINE OF rt_operations.

    lt_paths = mo_json->members( '/paths/' ).
    LOOP AT lt_paths INTO lv_path.
      ls_operation-path = lv_path.
      lt_methods = mo_json->members( '/paths/' && lv_path && '/' ).
      LOOP AT lt_methods INTO lv_method.
        ls_operation-method = lv_method.
        ls_operation-summary = mo_json->value_string( '/paths/' && lv_path && '/' && lv_method && '/summary' ).
        ls_operation-description = mo_json->value_string( '/paths/' && lv_path && '/' && lv_method && '/description' ).
        ls_operation-operation_id = mo_json->value_string( '/paths/' && lv_path && '/' && lv_method && '/operationId' ).
        ls_operation-operation_id = to_lower( ls_operation-operation_id ).
        APPEND ls_operation TO rt_operations.
      ENDLOOP.
    ENDLOOP.
  ENDMETHOD.

ENDCLASS.